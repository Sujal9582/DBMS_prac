create database Score;
use Score;
create table stud_marks(name varchar(20),total_marks int(5));
create table Result(roll_no int(3) primary key,name varchar(20),class varchar(20));
insert into stud_marks values('Suresh',995);
insert into stud_marks values('Harish',865);
insert into stud_marks values('Samart',920);
insert into stud_marks values('Mohan',1000);
insert into stud_marks values('Soham',745);
select * from stud_marks;
insert into Result(roll_no,Name) values(1,'Suresh');
insert into Result(roll_no,Name) values(2,'Harish');
insert into Result(roll_no,Name) values(3,'Samart');
insert into Result(roll_no,Name) values(4,'Mohan');
insert into Result(roll_no,Name) values(5,'Soham');
select * from Result;
delimiter //
create procedure proc_Grade(in r int(2),out grade char(25))
begin
declare m int(4);
select total_marks into m from stud_marks where name=(select name from Result where roll_no=r);
if m>=990 and m<=1500 then
select 'Distinction' into grade;
update Result set Class='Distinction' where Roll_no=r;
elseif m>=900 and m<=989 then
select 'FirstClass' into grade;
update Result set Class='FirstClass' where Roll_no=r;
elseif m>=825 and m<=899 then
select 'SecondClass' into grade;
update Result set Class='SecondClass' where Roll_no=r;
else
select '--' into grade;
update Result set Class='--' where Roll_no=r;
end if;
end //
delimiter //
create function func_Grade(r int(2))
returns varchar(25)
deterministic
begin
declare grade varchar(25);
call proc_Grade(r,grade);
return grade;
end //
select func_Grade(1); //
select func_Grade(2); //
select func_Grade(3); //
select func_Grade(4); //
select func_Grade(5); //
select * from Result; //


----------------------------***************************-----------------------------------------------

CREATE DATABASE Score;
USE Score;

CREATE TABLE stud_marks(name VARCHAR(20), total_marks INT);
CREATE TABLE Result(roll_no INT PRIMARY KEY, name VARCHAR(20), class VARCHAR(20));

-- Insert sample data
INSERT INTO stud_marks VALUES 
('Suresh', 995), ('Harish', 865), ('Samart', 920), 
('Mohan', 1000), ('Soham', 745);

INSERT INTO Result (roll_no, name) VALUES 
(1, 'Suresh'), (2, 'Harish'), (3, 'Samart'), 
(4, 'Mohan'), (5, 'Soham');

DELIMITER //

CREATE PROCEDURE assign_Grade(IN r INT, OUT grade VARCHAR(25))
BEGIN
    DECLARE m INT;
    SELECT total_marks INTO m FROM stud_marks WHERE name = (SELECT name FROM Result WHERE roll_no = r);

    SET grade = CASE
        WHEN m >= 990 THEN 'Distinction'
        WHEN m >= 900 THEN 'FirstClass'
        WHEN m >= 825 THEN 'SecondClass'
        ELSE '--'
    END;

    UPDATE Result SET class = grade WHERE roll_no = r;
END //

CREATE FUNCTION get_Grade(r INT)
RETURNS VARCHAR(25)
DETERMINISTIC
BEGIN
    DECLARE grade VARCHAR(25);
    CALL assign_Grade(r, grade);
    RETURN grade;
END //

DELIMITER ;

-- Calling the function and checking results
SELECT get_Grade(1), get_Grade(2), get_Grade(3), get_Grade(4), get_Grade(5);
SELECT * FROM Result;